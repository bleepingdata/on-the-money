CREATE SCHEMA BOOKS;

CREATE TABLE BOOKS.AccountType
(
AccountTypeId SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
Description VARCHAR(50) NOT NULL CONSTRAINT UQ_BOOKS_AccountType_Description UNIQUE
)

INSERT into BOOKS.AccountType(AccountTypeId, Description) VALUES (0, 'Unknown Account Type');
INSERT into BOOKS.AccountType(AccountTypeId, Description) VALUES (1, 'Assets');
INSERT into BOOKS.AccountType(AccountTypeId, Description) VALUES (2, 'Liabilities');
INSERT into BOOKS.AccountType(AccountTypeId, Description) VALUES (3, 'Equity');
INSERT into BOOKS.AccountType(AccountTypeId, Description) VALUES (4, 'Income');
INSERT into BOOKS.AccountType(AccountTypeId, Description) VALUES (5, 'Expense');

CREATE TABLE BOOKS.Account
(
AccountId INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
AccountTypeId SMALLINT NOT NULL REFERENCES BOOKS.AccountType(AccountTypeId),
AccountCode CHAR(10) NOT NULL CONSTRAINT UQ_BOOKS_Account_AccountCode UNIQUE,
Description VARCHAR(50) NOT NULL CONSTRAINT UQ_BOOKS_Account_Description UNIQUE,
BankAccountNumber VARCHAR(56) NULL,
OpeningBalance MONEY NOT NULL,
OpeningBalanceDate DATE NOT NULL,
Balance MONEY NOT NULL CONSTRAINT DF_BOOKS_Account_Balance DEFAULT(0)
)
CREATE INDEX UQ_BOOKS_Account_BankAccountNumber ON BOOKS.Account(BankAccountNumber) WHERE BankAccountNumber IS NOT NULL;

INSERT into BOOKS.Account (AccountId, AccountTypeId, AccountCode, Description, OpeningBalance, OpeningBalanceDate, Balance)
	VALUES (0, 0, '0', 'Unknown Account', 0, '1900-01-01', 0);


CREATE TABLE BOOKS.LoadImportFile
(
LoadImportFileId BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
"Transaction Date" varchar(50) NULL,
"Processed Date" varchar(50) NULL,
Type varchar(50) NULL,
Details varchar(50) NULL,
Particulars varchar(50) NULL,
Code varchar(50) NULL,
Reference varchar(50) NULL,
Amount varchar(50) NULL,
Balance varchar(50) NULL,
"To/From Account Number" varchar(50) NULL,
"Conversion Charge" varchar(50) NULL,
"Foreign Currency Amount" varchar(50) NULL
);

CREATE TABLE BOOKS.LoadImportFile_Excel_ANZMortgage
(
Id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
Date varchar(50) NULL,
Details varchar(50) NULL,
Amount varchar(50) NULL,
Balance varchar(50) NULL
);

CREATE EXTENSION "uuid-ossp";

SELECT uuid_generate_v4();

CREATE TABLE BOOKS.Transaction
(
TransactionId BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
BankTransactionDate DATE NOT NULL,
BankProcessedDate DATE NULL,
TransactionXML XML NOT NULL,
Amount MONEY NOT NULL,
ImportDatetime timestamp NOT NULL CONSTRAINT DF_BOOKS_Transaction_ImportDatetime DEFAULT(current_timestamp),
ImportUniqueIdentifier uuid NOT NULL,
Type VARCHAR(50) NULL, 
Details VARCHAR(50) NULL,  
Particulars VARCHAR(50) NULL, 
Code VARCHAR(50) NULL, 
Reference VARCHAR(50) NULL,
IsProcessed BOOLEAN NOT NULL CONSTRAINT DF_BOOKS_Transaction DEFAULT (false),
ProcessedDatetime timestamp NULL,
RowCreationDate timestamp NOT NULL CONSTRAINT DF_BOOKS_Transaction_dt DEFAULT(current_timestamp)
);

CREATE TABLE BOOKS.TransactionLine
(
TransactionLineId BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
TransactionId BIGINT NOT NULL REFERENCES BOOKS.Transaction(TransactionId),
AccountId INT NULL REFERENCES BOOKS.Account(AccountId),
DepositAmount MONEY NULL,
WithdrawalAmount MONEY NULL,
RowCreationDate timestamp NOT NULL CONSTRAINT DF_BOOKS_TransactionLine_dt DEFAULT(current_timestamp)
);


CREATE TABLE BOOKS.TransactionStaging
(
TransactionStagingId BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
BankTransactionDate DATE NOT NULL,
BankProcessedDate DATE NULL,
TransactionXML XML NOT NULL,
Amount MONEY NOT NULL,
ImportDatetime timestamp NOT NULL CONSTRAINT DF_BOOKS_TransactionStaging_ImportDatetime DEFAULT(current_timestamp),
ImportUniqueIdentifier uuid NOT NULL,
Type VARCHAR(50) NULL, 
Details VARCHAR(50) NULL, 
Particulars VARCHAR(50) NULL, 
Code VARCHAR(50) NULL, 
Reference VARCHAR(50) NULL,
IsProcessed BOOLEAN NOT NULL CONSTRAINT DF_BOOKS_TransactionStaging DEFAULT (FALSE),
ProcessedDatetime timestamp NULL,
RowCreationDate timestamp NOT NULL CONSTRAINT DF_BOOKS_TransactionStaging_dt DEFAULT(current_timestamp)
);

CREATE TABLE BOOKS.TransactionLineStaging
(
TransactionLineStagingId BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
TransactionStagingId BIGINT REFERENCES BOOKS.TransactionStaging(TransactionStagingId),
AccountId INT NULL REFERENCES BOOKS.Account(AccountId),
DepositAmount MONEY NULL,
WithdrawalAmount MONEY NULL,
RowCreationDate timestamp NOT NULL CONSTRAINT DF_BOOKS_TransactionLineStaging_dt DEFAULT(current_timestamp)
);


CREATE TABLE BOOKS.TransactionImportRules
(
TransactionImportRulesId INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
FromAccountId INT NOT NULL REFERENCES BOOKS.Account(AccountId),
ToAccountId INT NOT NULL REFERENCES BOOKS.Account(AccountId),
RowCreationDate timestamp NOT NULL CONSTRAINT DF_BOOKS_TransactionImportRules_dt DEFAULT(current_timestamp),
AppliesFromDate DATE NOT NULL CONSTRAINT DF_BOOKS_TransactionImportRules_AppliesFromDate DEFAULT('1900-01-01'),
AppliesUntilDate DATE NOT NULL CONSTRAINT DF_BOOKS_TransactionImportRules_AppliesUntilDate DEFAULT('2099-12-31'),
Type VARCHAR(50) NULL,
Details VARCHAR(50) NULL,
Particulars VARCHAR(50) NULL,
Code VARCHAR(50) NULL,
Reference VARCHAR(50) NULL
);
 
